// we can use dp here but here is a simpler approach -> https://www.youtube.com/watch?v=tQU4rkmPyV0
// we have used the given matric and updated the max possible values from 2nd last col. to col. 0 and calulated max
class Solution{

    static int maxGold(int n, int m, int M[][])
    {
        for(int i=m-2;i>=0;i--){
            for(int j=0;j<n;j++){
                
                int ryt= M[j][i+1];
                int upryt= (j==0)?0:M[j-1][i+1];
                int downryt= (j==n-1)?0:M[j+1][i+1];
                
                M[j][i]+=Math.max(ryt,Math.max(upryt,downryt));
            }
        }
        int ans=M[0][0];
        for(int i=1;i<n;i++){
            ans=(M[i][0]>ans)?M[i][0]:ans;
        }
        return ans;
    }
}
