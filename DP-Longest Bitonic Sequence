// create 2 arrays - one having lis of forward and another of backward lis of the array
// then subtract the corresponding idx of the2  arrays to get result - subtract 1 from final result...
public class Solution {
    public static int longestBitonicSequence(int[] arr, int n) {
        int[] dp1=new int[n];
        int[] dp2=new int[n];
        Arrays.fill(dp1,1);
        Arrays.fill(dp2,1);

        for(int i=0;i<n;i++){
            for(int prev=0;prev<=i;prev++){
                if(dp1[i]<dp1[prev]+1 && arr[prev]<arr[i]){
                    dp1[i]=dp1[prev]+1;
                }
            }
        }

        for(int i=n-1;i>=0;i--){
            for(int prev=n-1;prev>i;prev--){
                if(dp2[i]<dp2[prev]+1 && arr[prev]<arr[i]){
                    dp2[i]=dp2[prev]+1;
                }
            }
        }
        int maxi=0;
        for(int i=0;i<n;i++){
            maxi=Math.max(maxi,dp1[i]+dp2[i]-1);
        }
        return maxi;
    }
}
