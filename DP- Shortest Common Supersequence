// here we use the lcs code and then print the req string...
public class Solution {
    public static String shortestSupersequence(String s, String t) {
        int n = s.length();
        int m = t.length();
        int[][] dp = new int[n + 1][m + 1];

        for (int i = 0; i <= n; i++) dp[i][0] = 0;
        for (int j = 0; j <= m; j++) dp[0][j] = 0;

        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= m; j++) {
                if (s.charAt(i - 1) == t.charAt(j - 1)) dp[i][j] = 1 + dp[i - 1][j - 1];
                else dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]);
            }
        }

        String res = "";
        int i = n, j = m;

        while (i > 0 && j > 0) {
            if (s.charAt(i - 1) == t.charAt(j - 1)) {
                res = s.charAt(i - 1) + res;
                i--;
                j--;
            } else if (dp[i - 1][j] > dp[i][j - 1]) {  // going up
                res = s.charAt(i - 1) + res;
                i--;
            } else {          // going left
                res = t.charAt(j - 1) + res;
                j--;
            }
        }

        while (i > 0) {
            res = s.charAt(i - 1) + res;
            i--;
        }
        while (j > 0) {
            res = t.charAt(j - 1) + res;
            j--;
        }
        return res;
    }
}
