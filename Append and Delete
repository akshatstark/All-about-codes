import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

class Result {

    /*
     * Complete the 'appendAndDelete' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts following parameters:
     *  1. STRING s
     *  2. STRING t
     *  3. INTEGER k
     */

    public static String appendAndDelete(String s, String t, int k) {
    // Write your code herepublic static String appendAndDelete(String s, String t, int k) {
        
        //Have enough moves to decrease s to zero and add all chars from t to s
        if(k >= (s.length() + t.length() )){
            return "Yes";
        }
        
        int equals = 0;
        
        //check the index limit where s is equals to t;
        for(int i = 0; i < s.length(); i++){
            if(i >= t.length()){
                break;
            }
            if(s.charAt(i) == t.charAt(i)){
                equals = i;
            }else {
                equals = i;
                break;
            }
        }
        
        //Moves necessary to add chars from t to s
        k -= t.subSequence(equals, t.length()).length();
        //Moves necessary to delete chars from s
        k -= s.subSequence(equals, s.length()).length();
        
        //Doesn't have enough moves to add the chars from t to s after deleting the chars from s
        if(k < 0){
            return "No";
        }    
        
        //Exact match adding chars from t to s and deleting chars from s
        if(k == 0){
            return "Yes";
        }
        
        //Can delete and add the last char from s enough times to use all the moves
        if(k % 2 == 0){
            return "Yes";
        }

        return "No";
    }

    }



public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String s = bufferedReader.readLine();

        String t = bufferedReader.readLine();

        int k = Integer.parseInt(bufferedReader.readLine().trim());

        String result = Result.appendAndDelete(s, t, k);

        bufferedWriter.write(result);
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
