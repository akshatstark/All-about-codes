class Solution {
     static int smithNum(int n) {
        int sum=0;
        int k=n;
        int temp=digitSum(n);
        for(int i=2;i<=Math.sqrt(n);i++){
            while(n%i==0){            // doing prime factorization
                sum+=digitSum(i);
                n/=i;
            }
        }
        if(n>1 && n!=k){      // if any large no. is left tht is a prime no., it cant be the no. itslf as its not allowed
            sum+=digitSum(n); //eg- 26-> 26/2=13: 13 is prime     
        }
        
        return sum==temp?1:0;
    }
    
    // for counting sum of digits
    static int digitSum(int n){
        int temp=n;
        int ans=0;
        while(temp!=0){
            ans+=temp%10;
            temp/=10;
        }
        return ans;
    }
};
