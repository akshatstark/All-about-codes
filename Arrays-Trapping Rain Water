// https://www.youtube.com/watch?v=UZG3-vZlFM4
// formula(at any idx i)= Math.min(left,ryt) - ht of idx 

class Solution{
    static long trappingWater(int arr[], int n) { 
        int[] left=new int[n];   // keeping track of max ht on left of arr
        int[] ryt=new int[n];    // keeping track of max ht on ryt of arr
        
        left[0]=arr[0];
        for(int i=1;i<n;i++){
            left[i]=Math.max(arr[i],left[i-1]);
        }
        
        ryt[n-1]=arr[n-1];
        for(int i=n-2;i>=0;i--){
            ryt[i]=Math.max(arr[i],ryt[i+1]);
        }
        
        long res=0;
        for(int i=0;i<n;i++){      // do an example on paper to understand this
            res+=Math.min(left[i],ryt[i])-arr[i];
        }
        
        return res;
    } 
}
